<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AP8AAAD/AAAA7gAAADEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAOAAAAwAAAAP8AAAD/AAAA5gAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ADsAAAD0AAAA/wAAAP8AAADzAAAAOQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAB3AAAA/wAAAP8AAADwAAAANAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAALAAAAOsAAAD/AAAA/wAAAPgAAABGAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADkAAADwAAAA/wAAAPgAAABFAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAeAAAA3wAAAP8AAAD/AAAA/QAAAFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEwAAAM4AAAD/AAAA/QAA
        AFYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABMAAADRAAAA/wAAAP8AAAD/AAAAagAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAogAA
        AP8AAAD/AAAAaQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACQAAAL8AAAD/AAAA/wAAAP8AAACAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAB2AAAA/wAAAP8AAAB8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAArAAAAP8AAAD/AAAA/wAA
        AJYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAFIAAAD7AAAA/wAAAI8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACXAAAA/wAA
        AP8AAAD/AAAAqwAAAAMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAIAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAANwAAAPEAAAD/AAAAogAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AIIAAAD/AAAA/wAAAP8AAAC9AAAACQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAkQAA
        ABkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAlAAAA5QAAAP8AAACzAAAABQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAbQAAAP8AAAD/AAAA/wAAAM0AAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        ACQAAADYAAAAfQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkAAADZAAAA/wAAAMQAAAALAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABaAAAA/gAAAP8AAAD/AAAA2AAAABgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAJIAAADoAAAAPQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEQAAAM4AAAD/AAAA0wAA
        ABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEkAAAD5AAAA/wAAAP8AAADhAAAAIAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAQwAAAPUAAADTAAAARQAAAAQAAAAAAAAAAAAAAAAAAAAMAAAAxgAA
        AP8AAADgAAAAHwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAOwAAAPMAAAD/AAAA/wAAAOcAAAAmAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAAAwQAAAP8AAADtAAAApQAAAGMAAABDAAAAOgAA
        AEgAAADTAAAA/wAAAO8AAABjAAAAQgAAAEQAAABEAAAARAAAAEIAAABoAAAA8wAAAP8AAAD/AAAA8AAA
        AHEAAABVAAAAWAAAAFkAAABaAAAAWwAAAF0AAAAwAAAAAAAAAAAAAABpAAAA/QAAAP8AAAD/AAAA/gAA
        APcAAADzAAAA9gAAAP0AAAD/AAAA/gAAAPgAAAD3AAAA9wAAAPcAAAD3AAAA9wAAAPgAAAD+AAAA/wAA
        AP8AAAD/AAAA/QAAAP0AAAD9AAAA/gAAAP4AAAD+AAAA/wAAAIIAAAAAAAAAAAAAABUAAAC+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAAgAAAAAAAAAAAAAAAAAAA
        ADAAAADDAAAA/QAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAB+AAAAAAAA
        AAAAAAAAAAAAAAAAABcAAABlAAAAqwAAANIAAADnAAAA8gAAAPcAAAD7AAAA/AAAAP4AAAD+AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP4AAAD+AAAA/gAAAP4AAAD+AAAA/QAA
        AHsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAFAAAAGAAAAC8AAABDAAAAVAAAAGEAAABqAAAAcQAA
        AHcAAAB6AAAAfQAAAH4AAAB+AAAAfgAAAH4AAAB9AAAAfAAAAHoAAAB5AAAAeAAAAHYAAAB1AAAAcwAA
        AHEAAABwAAAANfB/+A/gP/AH4B/gA8AfwAHAD8AB4A/AAOAPwCDwD8B48A/A+PgPwPj8B8D//AfA//4H
        wP/+B8D//wfA//8HwP//B8D//wfA//+HwP//h+B/P4Pgfx+D4H8fg+B/j4Pgf4OD4H+AAAAAwAAAAMAA
        AADgAAAA8AAAAPwAAAA=
</value>
  </data>
</root>